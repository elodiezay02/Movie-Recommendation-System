# -*- coding: utf-8 -*-
"""Label Encoder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jYJvuVAIjwiJKzMHihV-5ArJ3Bacw0py
"""

import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer
from ast import literal_eval
from nltk.stem.snowball import SnowballStemmer
from nltk.stem.wordnet import WordNetLemmatizer
import warnings; warnings.simplefilter('ignore')
from get_movie_features import movie_feature

from sklearn import preprocessing
from sklearn.preprocessing import LabelEncoder

credits_ = r'/content/credits.csv'
keywords = r'/content/keywords.csv'
links_small = r'/content/links_small.csv'
movies_metadata = r'/content/movies_metadata.csv'

smd = movie_feature(movies_metadata, links_small, credits_, keywords)
smd.head(10)

flattened_genres = [e for sublist in smd['genres'] for e in sublist]
flattened_keywords = [e for sublist in smd['keywords'] for e in sublist]
flattened_spoken_languages = [e for sublist in smd['spoken_languages'] for e in sublist]
flattened_production_companies = [e for sublist in smd['production_companies'] for e in sublist]
flattened_production_countries = [e for sublist in smd['production_countries'] for e in sublist]

genres = LabelEncoder().fit(flattened_genres)

keywords = LabelEncoder().fit(flattened_keywords)

smd['director'] = preprocessing.LabelEncoder().fit_transform(smd['director'])

sp_lan = LabelEncoder().fit(flattened_spoken_languages)

pro_com = LabelEncoder().fit(flattened_production_companies)

pro_coun = LabelEncoder().fit(flattened_production_countries)

gen_list(enumerate(genres.classes_))

genres_enc = [list(genres.transform(sublist)) for sublist in smd['genres']]

keyword_enc = [list(keywords.transform(sublist)) for sublist in smd['keywords']]

spoken_languages_enc = [list(sp_lan.transform(sublist)) for sublist in smd['spoken_languages']]

production_companies_enc = [list(pro_com.transform(sublist)) for sublist in smd['production_companies']]

production_countries_enc = [list(pro_coun.transform(sublist)) for sublist in smd['production_countries']]

